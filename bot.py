import logging
import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters
from datetime import time, datetime
import pytz

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
TOKEN = os.environ.get('TOKEN')
TIMEZONE = pytz.timezone('Asia/Novosibirsk')

# –í—Ä–µ–º—è –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ (–ø–æ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫—É)
MEAL_TIMES = [
    time(8, 0, 0, tzinfo=TIMEZONE),  # –ó–∞–≤—Ç—Ä–∞–∫ –≤ 8:00 –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
    time(13, 0, 0, tzinfo=TIMEZONE),  # –û–±–µ–¥ –≤ 13:00 –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
    time(19, 0, 0, tzinfo=TIMEZONE)  # –£–∂–∏–Ω –≤ 19:00 –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
]

MEAL_NAMES = ["–∑–∞–≤—Ç—Ä–∞–∫", "–æ–±–µ–¥", "—É–∂–∏–Ω"]
USER_CONFIRMATIONS = {}

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


def start(update: Update, context: CallbackContext):
    keyboard = [['–ü–æ–µ–ª(–∞)']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç, –∫–æ—Ç–∏–∫! –Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –æ –ø—Ä–∏—ë–º–∞—Ö –ø–∏—â–∏ –ø–æ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ üçΩÔ∏è\n'
        '–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É "–ü–æ–µ–ª(–∞)" –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏! üíï',
        reply_markup=reply_markup
    )


def handle_meal_confirmation(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    USER_CONFIRMATIONS[user_id] = datetime.now(TIMEZONE)

    user = update.effective_user
    responses = [
        f"–ú–æ–ª–æ–¥–µ—Ü, {user.first_name}! –¢—ã —Ç–∞–∫–æ–π(–∞—è) —É–º–Ω–∏—á–∫–∞ ü•∞",
        "–û–±–æ–∂–∞—é, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µ! üíñ",
        "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, –º–æ–π —Ö–æ—Ä–æ—à–∏–π –∫–æ—Ç–∏–∫! üòª",
        "–¢—ã —Å–¥–µ–ª–∞–ª(–∞) –º–æ–π –¥–µ–Ω—å –ª—É—á—à–µ! üåà",
        "–ö–∞–∫ –∂–µ —è —Ç–æ–±–æ–π –≥–æ—Ä–∂—É—Å—å! ‚ú®",
    ]
    import random
    update.message.reply_text(random.choice(responses))


def help_command(update: Update, context: CallbackContext):
    help_text = """
üçΩÔ∏è –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É-–Ω–∞–ø–æ–º–∏–Ω–∞—Ç–µ–ª—é:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–ë–æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ (–ø–æ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏):
‚Ä¢ –ó–∞–≤—Ç—Ä–∞–∫–µ ü•û - 8:00
‚Ä¢ –û–±–µ–¥–µ üç≤ - 13:00  
‚Ä¢ –£–∂–∏–Ω–µ üçõ - 19:00

–ù–∞–∂–∏–º–∞–π "–ü–æ–µ–ª(–∞)" –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏!
    """
    update.message.reply_text(help_text)


def error_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logging.error(f'–û—à–∏–±–∫–∞: {context.error}')


def main():
    if not TOKEN:
        logging.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render")
        return

    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω (use_context=True –¥–ª—è –≤–µ—Ä—Å–∏–∏ 13.x)
    updater = Updater(TOKEN, use_context=True)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(MessageHandler(Filters.text("–ü–æ–µ–ª(–∞)"), handle_meal_confirmation))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()

    # –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
    logging.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏!")
    updater.idle()


if __name__ == '__main__':
    main()